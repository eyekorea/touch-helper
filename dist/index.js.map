{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["interface options {\n  notEventClass?: string;\n  touchStart?: undefined | Function;\n  touchMove? : null|Function,\n  touchEnd? : null|Function,\n  moveEnd? : number\n}\n\ninterface state{\n  x:number,\n  y:number,\n  speedX:number,\n  speedY:number,\n  timer:any,\n  stime:number\n}\n\n/**\n * \n * @param {number} xf 현재 지점\n * @param {number} xi 시작 지점\n * @param {number} tf 현재 시간\n * @param {number} ti 시작 시간\n * @returns {number}\n */\nfunction speedCheck(xf: number, xi: number, tf: number, ti: number){ \n    const value = (xf-xi) / (tf-ti);\n    return value;\n  };\n\nconst _option:options = {\n  notEventClass : '.not-touch-event',\n  touchStart : null,\n  touchMove : null,\n  touchEnd : null,\n  moveEnd : 100\n};\n\n/*\n    TITLE: touchStateManarger : Class\n    NOTE: touch 이벤트 진행시 touch 상태를 갱신하는 클래스\n    @ 정상현\n    # touchElement : document element [필수]\n    # options : Object\n    # options.touchStart : function ( state, event )\n        - startX : 터치가 시작된 X 좌표 (clientX)\n        - startY : 터치가 시작된 Y 좌표 (clientY)\n    # options.touchMove : function ( state, event )\n        - moveX : 시작점을 0 으로 움직인 X 좌표\n        - moveY : 시작점을 0 으로 움직인 Y 좌표\n        - directionX : 시작점을 기준으로 움직인 방향 ( \"left\" or \"right\")\n        - directionY : 시작점을 기준으로 움직인 방향 ( \"up\" or \"down\")\n    # options.touchEnd : function( state, event )\n        - moveX : 시작점을 0 으로 움직인 X 좌표\n        - moveY : 시작점을 0 으로 움직인 Y 좌표\n        - directionX : 시작점을 기준으로 움직인 방향 ( \"left\" or \"right\")\n        - directionY : 시작점을 기준으로 움직인 방향 ( \"up\" or \"down\")\n        - phaseX : x 축으로 움직인 양에 대해 options.moveEnd 값과 비교하여 cancel or end\n        - phaseY : y 축으로 움직인 양에 대해 options.moveEnd 값과 비교하여 cancel or end\n    # options.moveEnd : default 100 / touchEnd 가 발생할때 cancel 인지 end 인지를 구분하기 위한 값.\n\n    # Methods\n        - disabled():Void\n            - 이벤트를 발생시키지 않음.\n        - enabled():Void\n            - 이벤트를 발생시킴.\n        - destroy():Void\n            - 해당 클래스의 이벤트를 삭제함.\n*/\n\nexport default class TouchHelper {\n  touchElement:HTMLElement;\n  option:options;\n  startY:number;\n  startX:number;\n  moveY:number;\n  moveX:number;\n  end:number;\n  phaseX:null|String;\n  phaseY:null|String;\n  directionX:null|String;\n  directionY:null|String;\n  isEnabled:Boolean;\n  speedState:state;\n  tsEvent:VoidFunction;\n  teEvent:VoidFunction;\n  tmEvent:VoidFunction;\n\n  constructor(element: HTMLElement, opt: any){\n    const instance = this;\n    this.option = Object.assign({}, _option, opt);\n    this.touchElement = element;\n    this.startY = 0;\n    this.startX = 0;\n    this.moveY = 0;\n    this.moveX = 0;\n    this.end = 0;\n    this.phaseX = null;\n    this.phaseY = null;\n    this.directionX = null;\n    this.directionY = null;\n    this.isEnabled = true;\n    this.speedState = {\n      x : 0,\n      y : 0,\n      speedX : 0,\n      speedY : 0,\n      timer : null,\n      stime : 0\n    };\n  }\n  touchstart ( event:TouchEvent ){\n    const { isEnabled, option } = this;\n    if( !isEnabled ){\n      event.preventDefault();\n      return false;\n    }\n    if (event.target instanceof Element) { \n      if( event.target.closest(option.notEventClass) ){\n        return false;\n      }\n    }\n    this.startY = event.touches[0].clientY;\n    this.startX = event.touches[0].clientX;\n    this.moveY = 0;\n    this.moveX = 0;\n    \n    if( this.speedState.timer === null ){\n      this.speedState.stime = Date.now();\n      this.speedState.x = 0;\n      this.speedState.y = 0;\n      this.speedState.timer = window.setInterval(this.speedCheck.bind(this) ,50);\n    }\n\n    if( typeof option.touchStart === 'function' ){\n      const {startX, startY} = this;\n      option.touchStart( {\n        startX : startX, \n        startY : startY\n      }, event);\n    }\n  }\n  touchmove(event:TouchEvent){\n    const { isEnabled, option } = this;\n    if( !isEnabled ){\n      event.preventDefault();\n      return false;\n    }\n    if (event.target instanceof Element) { \n      if( event.target.closest(option.notEventClass) ){\n        return false;\n      }\n    }\n    this.moveX = this.startX - event.touches[0].clientX;\n    this.moveY = this.startY - event.touches[0].clientY;\n    this.directionX = (this.moveX > 0) ? 'left' : 'right';\n    this.directionY = (this.moveY > 0) ? 'up' : 'down';\n    if( typeof option.touchMove === 'function' ){\n      const {moveX, moveY, directionX, directionY, speedState} = this;\n      option.touchMove( {\n        moveX : moveX,\n        moveY : moveY,\n        directionX : directionX,\n        directionY : directionY,\n        speedX : speedState.speedX,\n        speedY : speedState.speedY\n      }, event );\n    }\n  }\n  touchend(event:TouchEvent){\n    const { isEnabled, option } = this;\n    if( !isEnabled ){\n      event.preventDefault();\n      return false;\n    }\n    if (event.target instanceof Element) { \n      if( event.target.closest(option.notEventClass) ){\n        return false;\n      }\n    }\n    this.phaseX = (Math.abs(this.moveX) > option.moveEnd ) ? 'end' : 'cancel';\n    this.phaseY = (Math.abs(this.moveY) > option.moveEnd ) ? 'end' : 'cancel';\n    this.startX = 0;\n    this.startY = 0;\n    if( this.speedState.timer !== null ){\n      window.clearInterval(this.speedState.timer);\n      this.speedState.timer = null;\n    }\n    if( typeof option.touchEnd === 'function' ){\n      const {moveX, moveY, directionX, directionY,phaseX, phaseY, speedState} = this;\n      option.touchEnd({\n        moveX : moveX,\n        moveY : moveY,\n        directionX : directionX,\n        directionY : directionY,\n        phaseX : phaseX,\n        phaseY : phaseY,\n        speedX : speedState.speedX,\n        speedY : speedState.speedY\n      }, event);\n    }\n  }\n  speedCheck(){\n    const xi = this.speedState.x;\n    const xf = Math.abs( this.moveX );\n    const yi = this.speedState.y;\n    const yf = Math.abs( this.moveY );\n    const tf = Date.now();//msec\n    const ti = this.speedState.stime;\n    this.speedState.speedX = Math.abs( speedCheck(xf, xi, tf/50, ti/50 ) );\n    this.speedState.speedY = Math.abs( speedCheck(yf, yi, tf/50, ti/50 ) );// 현재 지점 , 시작 지점 , 현재 시간, 시작 시간\n    this.speedState.x = xf;\n    this.speedState.y = yf;\n    this.speedState.stime = tf;\n  }\n  disabled (){\n    this.isEnabled = false;\n  };\n  enabled(){\n    this.isEnabled = true;\n  };\n  destroy(){\n    this.touchElement.removeEventListener( 'touchstart', this.tsEvent );\n    this.touchElement.removeEventListener( 'touchmove', this.tmEvent );\n    this.touchElement.removeEventListener( 'touchend', this.teEvent );\n  }\n  init(){\n    const {touchstart, touchmove, touchend} = this;\n    this.tsEvent = touchstart.bind(this);\n    this.tmEvent = touchmove.bind(this);\n    this.teEvent = touchend.bind(this);\n\n    this.touchElement.addEventListener( 'touchstart' , this.tsEvent , {\n      passive:false\n    });\n\n    this.touchElement.addEventListener( 'touchmove' , this.tmEvent , {\n      passive:false,\n    } );\n    this.touchElement.addEventListener( 'touchend' , this.teEvent , {\n      passive:false,\n    });\n  }\n}\n"]}